
# Module pour gérer des points dans un espace à deux dimensions.

global Geometrie

    # Type fondamental : un point est représenté par ses coordonnées x et y.
    
    type Point = ptr PointRec;

    type PointRec = rec(
      real x;
      real y;
    );    

    op point(real x, real y) returns Point p

    op estDansCercle(Point p) returns bool b 

    op initialiserPoint() returns Point p

body Geometrie
    proc point( x, y ) returns p
    {
      p = new(PointRec)
      p^.x = x;
      p^.y = y;
    }

    proc estDansCercle( p ) returns b
    {
      b = (p^.x**2 + p^.y**2 <= 1);
    }

    proc initialiserPoint() returns p
    {
      p = new(PointRec);
      p^.x = random();
      p^.y = random();
    }
end
